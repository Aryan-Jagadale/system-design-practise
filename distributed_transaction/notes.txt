Implement && simulate distributed transaction


We will be using Saga pattern for implenetation.

The Saga pattern is a design pattern used in distributed systems, 
particularly microservices architectures, 
to manage long-running transactions that span multiple services 
or databases without relying on 
traditional two-phase commit (2PC) protocols. 
It ensures eventual consistency across services by breaking down a 
complex transaction into a sequence of smaller, 
local transactions—each executed and committed independently—and 
defining compensating actions to undo previous steps if a 
failure occurs later in the process


Info : https://microservices.io/patterns/data/saga.html